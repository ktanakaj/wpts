<?xml version="1.0"?>
<api>
  <query>
    <normalized>
      <n from="Template:context" to="Template:Context" />
    </normalized>
    <pages>
      <page pageid="279373" ns="0" title="Template:Context">
        <revisions>
          <rev timestamp="2011-08-29T20:15:35Z" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;includeonly&gt;&lt;!--
 if not in a sub call, open paren, content span
--&gt;{{#if:{{{sub|}}}||&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;}}&lt;!--
 if label, generate it
--&gt;{{#if:{{{label|}}}|{{{label}}}}}&lt;!--
 if special follows, generate it, no space at end or before explicit comma
--&gt;{{#switch:{{{1|x}}}|,=&lt;span class=&quot;ib-comma&quot;&gt;&lt;span class=&quot;qualifier-comma&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&amp;#32;|or=&amp;#32;or&amp;#32;|and=&amp;#32;and&amp;#32;|_={{#switch:{{{2|x}}}|,|=|&amp;#32;}}}}&lt;!--
 do cats before recursion, so in order given; if in namespace 0, if topic category
--&gt;{{#switch:{{NAMESPACE}}|Appendix|={{#if:{{{topcat|}}}|{{#if:{{{skey|}}}|
[[Category:{{#if:{{{lang|}}}|{{{lang}}}:|en:}}{{{topcat|}}}|{{{skey}}} {{SUBPAGENAME}}]]{{#if:{{{script|}}}|[[Category:{{#if:{{{lang|}}}|{{{lang}}}:|en:}}{{{topcat|}}} in {{{script}}} script|{{{skey}}} {{SUBPAGENAME}}]]}}{{#if:{{{script2|}}}|[[Category:{{#if:{{{lang|}}}|{{{lang}}}:|en:}}{{{topcat|}}} in {{{script2}}} script|{{{skey2}}} {{SUBPAGENAME}}]]}}|
[[Category:{{#if:{{{lang|}}}|{{{lang}}}:|en:}}{{{topcat|}}}|{{SUBPAGENAME}}]]{{#if:{{{script|}}}|[[Category:{{#if:{{{lang|}}}|{{{lang}}}:|en:}}{{{topcat|}}} in {{{script}}} script|{{SUBPAGENAME}}]]}}{{#if:{{{script2|}}}|[[Category:{{#if:{{{lang|}}}|{{{lang}}}:|en:}}{{{topcat|}}} in {{{script2}}} script|{{SUBPAGENAME}}]]}}}}}}&lt;!--
 if pos or pos-like cat
--&gt;{{#if:{{{poscat|}}}|{{#if:{{{skey|}}}|
[[Category:{{{{#if:{{{poscat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} {{{poscat|}}}|{{{skey}}} {{SUBPAGENAME}}]]{{#if:{{{script|}}}|[[Category:{{{{#if:{{{poscat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} {{{poscat|}}} in {{{script}}} script|{{{skey}}} {{SUBPAGENAME}}]]}}{{#if:{{{script2|}}}|[[Category:{{{{#if:{{{poscat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} {{{poscat|}}} in {{{script2}}} script|{{{skey2}}} {{SUBPAGENAME}}]]}}|
[[Category:{{{{#if:{{{poscat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} {{{poscat|}}}|{{SUBPAGENAME}}]]{{#if:{{{script|}}}|[[Category:{{{{#if:{{{poscat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} {{{poscat|}}} in {{{script}}} script|{{SUBPAGENAME}}]]}}{{#if:{{{script2|}}}|[[Category:{{{{#if:{{{poscat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} {{{poscat|}}} in {{{script2}}} script|{{SUBPAGENAME}}]]}}}}}}&lt;!--
 regional templates
--&gt;{{#if:{{{regcat|}}}|{{#if:{{{skey|}}}|
[[Category:{{{regcat}}} {{{{#if:{{{regcat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}}|{{{skey}}} {{SUBPAGENAME}}]]{{#if:{{{script|}}}|[[Category:{{{regcat}}} {{{{#if:{{{regcat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} in {{{script}}} script|{{{skey}}} {{SUBPAGENAME}}]]}}{{#if:{{{script2|}}}|[[Category:{{{regcat}}} {{{{#if:{{{regcat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} in {{{script2}}} script|{{{skey2}}} {{SUBPAGENAME}}]]}}|
[[Category:{{{regcat}}} {{{{#if:{{{regcat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}}|{{SUBPAGENAME}}]]{{#if:{{{script|}}}|[[Category:{{{regcat}}} {{{{#if:{{{regcat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} in {{{script}}} script|{{SUBPAGENAME}}]]}}{{#if:{{{script2|}}}|[[Category:{{{regcat}}} {{{{#if:{{{regcat|}}}|languagex|ns:0}}|{{#if:{{{lang|}}}|{{{lang}}}|en}}}} in {{{script2}}} script|{{SUBPAGENAME}}]]}}}}}}&lt;!--
 fixed category
--&gt;{{#if:{{{cat|}}}|{{#if:{{{skey|}}}|
[[Category:{{{cat}}}|{{{skey}}} {{SUBPAGENAME}}]]|
[[Category:{{{cat}}}|{{SUBPAGENAME}}]]}}}} }}&lt;!--
 if something follows that is a special, recall on next parameter (ignore case of special on the end)
--&gt;{{#if:{{{1|}}}| {{{{#switch:{{{1}}}|,|or|and|_=context {{#expr:{{{sub|0}}}+1}}|ns:0}}|sub={{#expr:{{{sub|0}}}+1}}|lang={{{lang|}}}|skey={{{skey|}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|{{{6|}}}|{{{7|}}}|{{{8|}}}|{{{9|}}} }}&lt;!--
 default case(s) from switch, we have a template or string, generate comma if we had a label
--&gt;{{#switch:{{{1}}}|,|or|and|_=|#default={{#if:{{{label|}}}|&lt;span class=&quot;ib-comma&quot;&gt;&lt;span class=&quot;qualifier-comma&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&amp;#32;}}&lt;!--
 if template exists and is a context template, else call it, else call ourselves, avoid extra expansion by conditional on name
--&gt;{{ {{#if:{{{1|}}}|{{#if:{{#ifexist:Template:{{{1}}}|{{#ifeq:{{{{{1}}}|sub=}}|{{{{{1}}}|sub=1}}||+}}}}|{{{1}}}|context {{#expr:{{{sub|0}}}+1}}}}|ns:0}} |label={{{1}}}
|sub={{#expr:{{{sub|0}}}+1}}|lang={{{lang|}}}|skey={{{skey|}}}|{{{2|}}}|{{{3|}}}|{{{4|}}}|{{{5|}}}|{{{6|}}}|{{{7|}}}|{{{8|}}}|{{{9|}}} }}&lt;!--
--&gt;}}}}&lt;!-- end switch, if {1}
 if not in sub, close content span, paren
--&gt;{{#if:{{{sub||}}}||&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;}}&lt;!--
 now cat templates themselves, trick for only when sub is blank
--&gt;{{#ifeq:{{NAMESPACE}}{{{sub|}}}|{{ns:template}}|[[Category:{{ucfirst:{{{tcat|{{#if:{{{topcat|}}}|topical|
{{#if:{{{poscat|}}}|usage|
{{#if:{{{regcat|}}}|regional|
{{#ifeq:{{{1|}}}{{{2|}}}|_|qualifier}}}}}}}} }}} context labels}}|{{PAGENAME}}]]}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;noinclude&gt;</rev>
        </revisions>
      </page>
    </pages>
  </query>
</api>